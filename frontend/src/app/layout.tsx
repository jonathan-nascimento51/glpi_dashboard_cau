import type { Metadata } from 'next'
import { Inter, Roboto_Mono } from 'next/font/google'
import React from 'react'
import { SWRConfig } from 'swr'
import { captureException } from '@sentry/nextjs'
import { fetcher } from '@/lib/swrClient'
import './globals.css'
import '../index.css'
import { ReactQueryProvider } from './providers/ReactQueryProvider'

const geistSans = Inter({
  variable: '--font-geist-sans',
  subsets: ['latin'],
})

const geistMono = Roboto_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  return (
    <html lang="pt-BR">
      <head>
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link
          rel="preconnect"
          href="https://fonts.gstatic.com"
          crossOrigin=""
        />
        <link
          href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500;600&display=swap"
          rel="stylesheet"
        />
        <link
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
          rel="stylesheet"
        />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <SWRConfig
          value={{
            fetcher,
            dedupingInterval: 10000,
            refreshInterval: 30000,
            revalidateOnFocus: true,
            onError: (err) => captureException(err),
          }}
        >
          <ReactQueryProvider>{children}</ReactQueryProvider>
        </SWRConfig>
      </body>
    </html>
  )
}
