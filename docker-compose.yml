name: glpi_dashboard_cau
services:
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    env_file:
      - .env
    environment:
      PYTHONPATH: /app/src
      LOG_LEVEL: DEBUG
    depends_on:
      - redis
      - db
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 30s
      timeout: 5s
      start_period: 60s
      retries: 3
    ports:
      # Map API for host access
      - "8000:8000"

  redis:
    build:
      context: .
      dockerfile: docker/redis/Dockerfile
    restart: always
    # A configuração sysctl pode causar falhas em alguns ambientes (como WSL).
    # É seguro desativá-la para desenvolvimento local.
    # sysctls:
    #   - vm.overcommit_memory=1
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 15s
      timeout: 3s
      start_period: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: src/frontend/react_app/Dockerfile
      args:
        # A URL da API que o navegador usará para se conectar ao backend.
        # Em um ambiente de desenvolvimento local, é o localhost com a porta exposta do backend.
        NEXT_PUBLIC_API_BASE_URL: "http://localhost:8000"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 30s
      timeout: 5s
      start_period: 45s
      retries: 3
    ports:
      - 5173:5173

  db:
    build: ./db
    image: glpi_dashboard_db:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker/db-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 15s
      timeout: 5s
      start_period: 30s
      retries: 3
    ports:
      # Map database for host access (e.g., for local scripts)
      - "5432:5432"

volumes:
  db_data:
