name: CI/CD

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["main"]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install black isort pytest ruff pip-audit
      - name: Lint
        run: |
          black --check .
          isort --check-only .
          ruff check .
      - name: Run tests
        run: pytest -q
      - name: Security audit
        run: pip-audit

  docker-build:
    needs: lint-test
    # Run on direct pushes to main, PR merges to main, and tags
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract version
        id: version
        run: echo "value=$(grep -oP '^version\s*=\s*\"\K[0-9.]+(?=\")' pyproject.toml)" >> $GITHUB_OUTPUT
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/glpi-dashboard-cau:${{ steps.version.outputs.value }}-${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/glpi-dashboard-cau:latest
    outputs:
      version: ${{ steps.version.outputs.value }}

  deploy:
    needs: docker-build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Deploy image
        run: |
          bash scripts/deploy/deploy_production.sh \
            ghcr.io/${{ github.repository_owner }}/glpi-dashboard-cau:${{ needs.docker-build.outputs.version }}
