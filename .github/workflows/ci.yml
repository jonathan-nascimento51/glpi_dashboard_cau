# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: src/frontend/react_app/package-lock.json
      - name: Setup environment
        run: ./setup.sh
        env:
          SKIP_PLAYWRIGHT: "true"
      - name: Install frontend deps
        run: |
          cd src/frontend/react_app && npm ci && cd ../../..
      - name: Run pre-commit
        run: pre-commit run --show-diff-on-failure --color=always --all-files
      - name: Run frontend lint
        run: |
          cd src/frontend/react_app
          npm run lint --silent
      - name: Check API TypeScript definitions
        run: |
          make gen-types
          git diff --exit-code src/frontend/react_app/src/types/api.ts

  arch-docs:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Setup environment
        run: ./setup.sh
        env:
          SKIP_PLAYWRIGHT: "true"
      - name: Generate architecture docs
        run: python scripts/generate_arch_docs.py
      - name: Verify generated docs committed
        run: git diff --exit-code ARCHITECTURE.md

  test:
    needs: arch-docs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: src/frontend/react_app/package-lock.json
      - name: Setup environment
        run: ./setup.sh
        env:
          SKIP_PLAYWRIGHT: "true"
      - name: Install frontend deps
        run: |
          cd src/frontend/react_app && npm ci && cd ../../..
      - name: Run Pytest
        env:
          USE_MOCK_DATA: "true"
        run: pytest --cov=./ --cov-report=xml --cov-report=term --cov-fail-under=85
      - name: Run frontend tests
        run: |
          cd src/frontend/react_app
          npm test --silent

  build:
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/backend_service/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.ref_name }}

