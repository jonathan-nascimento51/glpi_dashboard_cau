import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { memo } from 'react';
const LevelsPanelComponent = ({ levels }) => {
    return (_jsxs("div", { className: "levels-section", children: [_jsx("div", { className: "levels-header", children: _jsxs("div", { children: [_jsx("div", { className: "levels-title", children: "Distribui\u00E7\u00E3o por N\u00EDveis" }), _jsx("div", { className: "levels-subtitle", children: "Vis\u00E3o detalhada por categoria" })] }) }), _jsx("div", { className: "levels-grid", children: levels.map((level) => (_jsxs("div", { className: `level-card ${level.name.toLowerCase()}`, children: [_jsx("div", { className: "level-header", children: _jsx("div", { className: "level-badge", children: level.name }) }), _jsxs("div", { className: "level-metrics", children: [_jsxs("div", { className: "level-metric", children: [_jsx("span", { className: "level-metric-label", children: "Novos" }), _jsx("span", { className: "level-metric-value", children: level.metrics.new })] }), _jsxs("div", { className: "level-metric", children: [_jsx("span", { className: "level-metric-label", children: "Progresso" }), _jsx("span", { className: "level-metric-value", children: level.metrics.progress })] }), _jsxs("div", { className: "level-metric", children: [_jsx("span", { className: "level-metric-label", children: "Pendente" }), _jsx("span", { className: "level-metric-value", children: level.metrics.pending })] }), _jsxs("div", { className: "level-metric", children: [_jsx("span", { className: "level-metric-label", children: "Resolvido" }), _jsx("span", { className: "level-metric-value", children: level.metrics.resolved })] })] })] }, level.name))) })] }));
};
export const LevelsPanel = memo(LevelsPanelComponent);
